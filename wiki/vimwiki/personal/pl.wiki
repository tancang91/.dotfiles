= Python =

{{{sh
# Upgrade all pip3 package
python3 -m pip list ---outdated -format=freeze  | sed 's/=.*//g' | xargs -n1 python3 -m pip install -U
}}}

== Logging ==
[[https://docs.python.org/3/howto/logging.html|Document]]

{{{python
# &a  Locale’s abbreviated weekday name.   
# &A  Locale’s full weekday name.  
# &b  Locale’s abbreviated month name.     
# &B  Locale’s full month name.    
# &c  Locale’s appropriate date and time representation.   
# &d  Day of the month as a decimal number [01,31].    
# &H  Hour (24-hour clock) as a decimal number [00,23].    
# &I  Hour (12-hour clock) as a decimal number [01,12].    
# &j  Day of the year as a decimal number [001,366].   
# &m  Month as a decimal number [01,12].   
# &M  Minute as a decimal number [00,59].  
# &p  Locale’s equivalent of either AM or PM. (1)
# &S  Second as a decimal number [00,61]. (2)
# &w  Weekday as a decimal number [0(Sunday),6].   
# &x  Locale’s appropriate date representation.    
# &X  Locale’s appropriate time representation.    
# &y  Year without century as a decimal number [00,99].    

logging.basicConfig(filename='file.log'
                    format='[%(asctime)s] %(message)s',
                    datefmt='%Y-%b-%d %H:%M:%S',
                    level=logging.DEBUG)
logging.debug('This is a debug message')
logging.info('This is an info message')
logging.warning('This is a warning message')
logging.error('This is an error message')
logging.critical('This is a critical message')
    
}}}

== Timeit ==
TODO: Learn about timing my code

== Unitest ==
TODO learn unitest

= Typescript =
== Reactjs ==

_Minimal example_
{{{javascript

class Timer extends React.Component {
  constructor(props) {
    super(props);
    this.state = { seconds: 0 };
  }

  tick() {
    this.setState(state => ({
      seconds: state.seconds + 1
    }));
  }

  componentDidMount() {
    this.interval = setInterval(() => this.tick(), 1000);
  }

  componentWillUnmount() {
    clearInterval(this.interval);
  }

  render() {
    return (
      <div>
        Seconds: {this.state.seconds}
      </div>
    );
  }
}

ReactDOM.render(
  <Timer />,
  document.getElementById('timer-example')
);

}}}
